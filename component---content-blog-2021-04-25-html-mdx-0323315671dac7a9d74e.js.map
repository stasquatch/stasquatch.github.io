{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/posts.js","webpack://gatsby-starter-default/./content/blog/2021-04-25-html.mdx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-default/./src/components/metadata.js"],"names":["PostTitle","styled","_frontmatter","layoutProps","MDXLayout","children","data","useStaticQuery","allMdx","edges","node","frontmatter","title","date","timeToRead","MDXContent","components","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","mdxType","parentName","isMDXComponent","MetadataWrapper"],"mappings":"8RAOMA,EAAYC,mBAAH,wDAAGA,CAAH,0BCCFC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EDDQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACTC,GAAOC,oBAAe,aADE,EAoBRD,EAAKE,OAAOC,MAAM,GAAGC,KAAKC,YAA1CC,EApBwB,EAoBxBA,MAAOC,EApBiB,EAoBjBA,KACTC,EAAaR,EAAKE,OAAOC,MAAM,GAAGC,KAAKI,WAE3C,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKF,MAAOA,IACZ,gBAACZ,EAAD,KAAYY,GACZ,gBAAC,IAAD,KACE,4BAAOE,EAAP,gBACA,4BAAOD,IAERR,IC7BQ,SAASU,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,ECfU,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDIN,mBACD,OAAO,QAAClB,EAAD,iBAAeD,EAAiBc,EAAhC,CAAuCD,WAAYA,EAAYY,QAAQ,eAG5E,iCACA,sBACE,iBAAOC,WAAW,UAChB,cAAIA,WAAW,UACb,cAAIA,WAAW,KACb,MAAS,QAEX,cAAIA,WAAW,KACb,MAAS,UAIf,iBAAOA,WAAW,UAChB,cAAIA,WAAW,UACb,cAAIA,WAAW,KACb,MAAS,OACR,kBAAQA,WAAW,MAAnB,eACH,cAAIA,WAAW,KACb,MAAS,MADX,cAIF,cAAIA,WAAW,UACb,cAAIA,WAAW,KACb,MAAS,OACR,kBAAQA,WAAW,MAAnB,uBACH,cAAIA,WAAW,KACb,MAAS,OACR,sBAAYA,WAAW,MAAvB,QAFH,MAE0D,sBAAYA,WAAW,MAAvB,YAIhE,8BACA,kBAAG,sBAAYA,WAAW,KAAvB,QAAH,+PAGwC,cAAIA,WAAW,KAAf,OAHxC,0FAIsD,sBAAYA,WAAW,KAAvB,QAJtD,kEAMA,wDAA0C,sBAAYA,WAAW,KAAvB,QAA1C,aAAuG,sBAAYA,WAAW,KAAvB,QAAvG,sBACA,0CAA4B,sBAAYA,WAAW,KAAvB,SAA5B,qBAAkG,sBAAYA,WAAW,KAAvB,QAAlG,UACA,iCACA,kBAAG,sBAAYA,WAAW,KAAvB,UACH,yBAAW,sBAAYA,WAAW,KAAvB,QAAX,+DAA0H,sBAAYA,WAAW,KAAvB,WAA1H,qIAE4C,sBAAYA,WAAW,KAAvB,QAF5C,0CAGE,sBAAYA,WAAW,KAAvB,aAHF,YAGmE,sBAAYA,WAAW,KAAvB,QAHnE,yEAKA,kBAAG,aAAGA,WAAW,IACb,KAAQ,uEADT,uBAGH,4BACA,oBAAK,gBAAMA,WAAW,OAAjB,0GAUL,kBAAG,cAAIA,WAAW,KAAf,UAA6B,sBAAYA,WAAW,MAAvB,KAA7B,uDACH,4BACA,kBAAG,aAAGA,WAAW,IACb,KAAQ,kEADT,4BAGH,kBAAG,aAAGA,WAAW,IACb,KAAQ,4EADT,6BAGH,kBAAG,aAAGA,WAAW,IACb,KAAQ,uCADT,gCAGH,kBAAG,aAAGA,WAAW,IACb,KAAQ,0DADT,4BAOPd,EAAWe,gBAAiB,G,gDEhGtBC,E,QAAkB9B,gBAAH,oEAAGA,CAAH,qHAcrB,IAJiB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SAClB,OAAO,gBAAC0B,EAAD,KAAkB1B","file":"component---content-blog-2021-04-25-html-mdx-0323315671dac7a9d74e.js","sourcesContent":["import React from 'react';\nimport Layout from './layout';\nimport SEO from './seo';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from 'styled-components';\nimport Metadata from './metadata';\n\nconst PostTitle = styled.h2`\n  margin-bottom: -1rem; // compensate for large margin on Metadata\n`;\n\nconst Posts = ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      {\n        allMdx {\n          edges {\n            node {\n              id\n              timeToRead\n              frontmatter {\n                date(formatString: \"MMMM Do, YYYY\")\n                title\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n  let { title, date } = data.allMdx.edges[0].node.frontmatter;\n  let timeToRead = data.allMdx.edges[0].node.timeToRead;\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <PostTitle>{title}</PostTitle>\n      <Metadata>\n        <span>{timeToRead} minute read</span>\n        <span>{date}</span>\n      </Metadata>\n      {children}\n    </Layout>\n  );\n};\n\nexport default Posts;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/stacyharrison/Desktop/code/stasquatch.github.io/src/components/posts.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Quick look`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required?`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sort of?`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Common attributes`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`lang`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`dir`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3>{`Summary`}</h3>\n    <p><inlineCode parentName=\"p\">{`html`}</inlineCode>{` is the root element, so all your HTML should live inside this tag.\nWhile it's not strictly required, it's good practice to include it. If\nyou omit the tag, browsers will usually insert it for you. Because\nbrowsers can have different behavior, you `}<em parentName=\"p\">{`may`}</em>{` get unexpected side effects\nrelying on this implementation. Explicitly defining the `}<inlineCode parentName=\"p\">{`html`}</inlineCode>{` tag also\nallows you to define the language of the document.`}</p>\n    <p>{`Immediate children can only be one `}<inlineCode parentName=\"p\">{`head`}</inlineCode>{` and one `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` (in that order).`}</p>\n    <p>{`The CSS psuedo-class `}<inlineCode parentName=\"p\">{`:root`}</inlineCode>{` will select the `}<inlineCode parentName=\"p\">{`html`}</inlineCode>{` tag.`}</p>\n    <h3>{`Attributes`}</h3>\n    <p><inlineCode parentName=\"p\">{`lang`}</inlineCode></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`lang`}</inlineCode>{` attribute accepts any valid language code and defaults to `}<inlineCode parentName=\"p\">{`unknown`}</inlineCode>{`.\nThis attribute tells screen readers what language to use to announce the page.\nDepending on the language code you set in the `}<inlineCode parentName=\"p\">{`lang`}</inlineCode>{` attribute, you may also want to\nset `}<inlineCode parentName=\"p\">{`dir=\"rtl\"`}</inlineCode>{` on the `}<inlineCode parentName=\"p\">{`html`}</inlineCode>{` tag to denote whether text is read right-to-left\nor left-to-right.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\"\n      }}>{`Global attributes`}</a></p>\n    <h3>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    …\n  </head>\n  <body>\n    …\n  </body>\n</html>\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: `}<inlineCode parentName=\"em\">{`…`}</inlineCode>{` denotes miscellaneous HTML, removed for brevity.`}</em></p>\n    <h3>{`Links`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html\"\n      }}>{`MDN: The HTML Document`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang\"\n      }}>{`MDN: The lang attribute`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://r12a.github.io/app-subtags/\"\n      }}>{`BCP47 Language Code Lookup`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/:root\"\n      }}>{`:root CSS psuedo-class`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst MetadataWrapper = styled.p`\n  font-size: 1.7rem;\n  margin: 1rem 0;\n  font-family: 'Nunito Sans';\n  *:not(:first-child)::before {\n    content: '–';\n    padding: 10px;\n  }\n`;\n\nconst Metadata = ({ children }) => {\n  return <MetadataWrapper>{children}</MetadataWrapper>;\n};\n\nexport default Metadata;\n"],"sourceRoot":""}